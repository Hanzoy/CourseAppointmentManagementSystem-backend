<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hanzoy.yuekewei.mapper.CourseMapper">
    <select id="getCourseByUserOpenid" resultType="com.hanzoy.yuekewei.pojo.po.CourseInfo">
        select
               c.id, c.name, p.url AS backgroundUrl, ct.count
        from
             course_time ct
        right join
                 course c
                on
                    c.id = ct.course_id
        left join
                 picture p
                on
                    c.background_url = p.id
        where
              user_id = #{openid}
    </select>

    <select id="getTimetableByCourseIdAndDate" resultType="com.hanzoy.yuekewei.pojo.po.Timetable">
        select
               t.id AS id,
               c.name AS coachName,
               p.url AS coachAvatarUrl,
               t.start_time AS startTime,
               t.end_time AS endTime,
               t.toplimit AS toplimit,
               t.remark AS remark,
               t.address AS address,
               (select count(id) from timetable_users_merge tum where tum.timetable_id = t.id) AS count
        from
             timetable t
        left join
                 timetable_coach_merge tcm
                     on t.id = tcm.timetable_id
        left join
                 coach c
                     on tcm.coach_id = c.id
        left join
                 picture p
                     on c.avatar_url = p.id
        where
              course_id = #{courseId}
          and
              date = #{date}
        order by
                 start_time
    </select>

    <select id="isReservation" resultType="boolean">
        select exists(select * from timetable_users_merge where user_id = #{openid} and timetable_id = #{timetableId})
    </select>

    <select id="getTimetableInfoByTimetableIdAndOpenid" resultType="com.hanzoy.yuekewei.pojo.po.TimetableInfo">
        select
               t.course_id AS courseId,
               c.name AS name,
               p.url AS backgroundUrl,
               ct.count AS surplusCount,
               t.id AS timetableId,
               coa.name AS coachName,
               (select url from picture where id = coa.avatar_url) AS coachAvatarUrl,
               t.date AS date,
               t.start_time AS startTime,
               t.end_time AS endTime,
               t.toplimit AS toplimit,
               t.remark AS remark,
               t.address AS address,
               (select count(id) from timetable_users_merge tum where tum.timetable_id = t.id) AS count,
               (select exists(select * from timetable_users_merge where user_id = #{openid} and timetable_id = #{timetableId})) AS isReservation
        from
             timetable t
        left join
                 course c
                     on t.course_id = c.id
        left join
                 picture p
                     on c.background_url = p.id
        left join
                 course_time ct
                     on c.id = ct.course_id
        left join
                 timetable_coach_merge tcm
                     on t.id = tcm.timetable_id
        left join
                 coach coa
                     on tcm.coach_id = coa.id
        where
              t.id = #{timetableId}
          and
              ct.user_id = #{openid}
    </select>

    <select id="getUserReservationByOpenidAndDate" resultType="com.hanzoy.yuekewei.pojo.po.UserReservationInfo">
        select
               t.id AS id,
               t.start_time AS startTime,
               t.end_time AS endTime,
               t.toplimit - (select count(id) from timetable_users_merge tum where tum.timetable_id = t.id) AS count,
               (select exists(select * from timetable_users_merge where user_id = #{openid} and timetable_id = t.id)) AS isReservation
        from
             timetable t
        left join
                 timetable_users_merge tum
                     on t.id = tum.timetable_id
        where
              t.date = #{date}
          and
              tum.user_id = #{openid}
    </select>

    <select id="getTimetableDateByTimetableId" resultType="com.hanzoy.yuekewei.pojo.po.TimetableDates">
        select
               t.date AS date,
               t.start_time AS startTime,
               t.end_time AS endTime
        from
            timetable t
        where
            t.id = #{timetableId}
    </select>

    <select id="getCourseTime" resultType="int">
        select
               count
        from
             course_time
        where
              user_id = #{openid}
          and
              course_id = #{courseId}
    </select>

    <update id="updateCourseTime">
        update
            course_time
        set
            count = #{count}
        where
              course_id = #{courseId}
          and
              user_id = #{openid}
    </update>

    <update id="addCourseTime">
        update
            course_time
        set
            count = (select count from course_time where user_id = #{openid} and course_id = #{courseId}) + 1
        where
            course_id = #{courseId}
          and
            user_id = #{openid}
    </update>

    <insert id="recordOperation" useGeneratedKeys="true">
        insert into
            course_time_operation(user_id, timetable_id, operation)
            VALUES (#{openid}, #{timetableId}, #{operation})
    </insert>

    <insert id="addUserToTimetable" useGeneratedKeys="true">
        insert into
            timetable_users_merge(timetable_id, user_id)
            VALUES (#{timetableId}, #{openid})
    </insert>

    <delete id="deleteUserToTimetable">
        delete from
                    timetable_users_merge
        where
              timetable_id = #{timetableId}
          and
              user_id = #{openid}
    </delete>
</mapper>